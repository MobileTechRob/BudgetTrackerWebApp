@using BudgetAPI.Models

@{
    ViewData["Title"] = "Year To Date Monthly Transaction Summary";
}

<h2>Year To Date Monthly Transaction Summary</h2>

<form id="myForm">
    <table>
        <tr>
            <td>
                <label>Select Year:</label>
            </td>
            <td>
                <select id="selectYear" name="selectYear" onchange="onyearchanged()">
                    <option value="2025">2025</option>
                    <option value="2024">2024</option>
                    <option value="2023">2023</option>
                </select>
            </td>
        </tr>
    </table>
</form>

<body style="background-color: beige;">
    <table id="tableYearToDate">
        <thead id="header-row-1">
            <tr>
                <th>Month Start</th>
                <th>&nbsp;&nbsp;&nbsp;</th>
                <th>Month End</th>
                <th>&nbsp;&nbsp;&nbsp;</th>
                <th>Cost Total</th>
                <th>&nbsp;&nbsp;&nbsp;</th>                
                <th>Savings Total</th>                
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.StartDate.ToString().Split(" ")[0]</td>
                    <th>&nbsp;&nbsp;&nbsp;</th>
                    <td>@item.EndDate.ToString().Split(" ")[0]</td>
                    <th>&nbsp;&nbsp;&nbsp;</th>
                    <td>@item.CostTotal</td>
                    <th>&nbsp;&nbsp;&nbsp;</th>
                    <td>@item.SavingsTotal</td>
                </tr>
            }
        </tbody>    
    </table>

    <table id="tableYearToDate_UserSelectedEarlierDate">
        <thead id="header-row-2">
            <tr>
                <th>Month Start</th>
                <th>&nbsp;&nbsp;&nbsp;</th>
                <th>Month End</th>
                <th>&nbsp;&nbsp;&nbsp;</th>
                <th>Cost Total</th>
                <th>&nbsp;&nbsp;&nbsp;</th>
                <th>Savings Total</th>
            </tr>
        </thead>
        <tbody id="tableYearToDate_UserSelectedEarlierDate_body">
        </tbody>
    </table>
</body>

<style>
    .container {
        display: flex;
        gap: 20px; /* Space between divs */
    }

    .item {
        flex: 1; /* Equal width */
        /* Add your styling here */
    }

    table tr:nth-child(even) {
        color: #333333; /* Dark gray for even rows */
    }

    table tr:nth-child(odd) {
        color: #0074d9; /* Blue for odd rows */
    }

    table th_center {
        text-align: center;
    }

    table th {
        background-color: beige;
        color: #000000;
        font-weight: bold;
    }

    .hidden {
        display: none;
    }
</style>



<script>
    window.onload = function () {
        console.log("window.onload called");

        const userSelectedYearTable = document.getElementById("tableYearToDate_UserSelectedEarlierDate");        
        userSelectedYearTable.style.display = "none";
    };


    function onyearchanged()
    {
        console.log("onyearchanged called")
        
        const year = document.getElementById("selectYear");

        console.log("selected year is ", year.value);    

        const defaultYearTable = document.getElementById("tableYearToDate");
        const userSelectedYearTable = document.getElementById("tableYearToDate_UserSelectedEarlierDate");
        
        defaultYearTable.style.display = "none"; // Hide the user selected year table
        userSelectedYearTable.style.display = "table";
        
        console.log("defaultYearTable.style.display" , defaultYearTable.style.display);
        console.log("userSelectedYearTable.style.display" , userSelectedYearTable.style.display);
        
        const queryStr = `/HomeBudget/GetYTDAndForward?startYear=${year.value}`;

        console.log("query str ", queryStr);

        fetch (queryStr)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log("data is ", data);

                renderYTDspendingHistory(data);
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });

    }

    function renderYTDspendingHistory(spendingHistory)
    {
           console.log("renderYTDspendingHistory line is ", spendingHistory);

           const tbody = document.getElementById('tableYearToDate_UserSelectedEarlierDate_body');

           if (tbody) 
           {
                  tbody.innerHTML = ''; // Clear any old rows

                  spendingHistory.forEach(spendingMonth =>
                  {                      
                      console.log("renderYTDspendingHistory ", spendingMonth);
                      console.log("renderYTDspendingHistory startDate", spendingMonth.startDate);

                      var [startDatePart, timePart1] = spendingMonth.startDate.split('T');
                      var [endDatePart, timePart2] = spendingMonth.endDate.split('T');

                      // var dateOfImport = datePart + " " + timePart.slice(0,8); // Combine date and time"
                      // var [datePart, timePart] = importHistory.transaction_StartDate.split('T');
                      // var startDate = datePart;
                      // var [datePart, timePart] = importHistory.transaction_EndDate.split('T');
                      // var endDate = datePart;
                      const row = document.createElement('tr');
                      row.innerHTML = `<td>${startDatePart}</td>
                                       <td>&nbsp;&nbsp;</td>
                                       <td>${endDatePart}</td>
                                       <td>&nbsp;&nbsp;</td>
                                       <td>${spendingMonth.costTotal}</td>
                                       <td>&nbsp;&nbsp;</td>
                                       <td>${spendingMonth.savingsTotal}</td>`;
                                       
                      tbody.appendChild(row);
                  });
           }
    }

</script>
