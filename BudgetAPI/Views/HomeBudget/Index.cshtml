@{
    ViewData["Title"] = "Home Page";
}

<style>
    .container {
        display: flex;
        gap: 10px; /* Space between divs */
    }

    .item {
        flex: 1; /* Equal width */
        /* Add your styling here */
    }

    table tr:nth-child(even) {
        color: #333333; /* Dark gray for even rows */
    }

    table tr:nth-child(odd) {
        color: #0074d9; /* Blue for odd rows */
    }

    table th_center {
        text-align: center;
    }

    table th {
        background-color: #FFFFFF;
        color: #000000;
        font-weight: bold;
    }

</style>

<div class="text-center">
    <h4>Year To Date Cost and Revenue</h4>
</div>

<script>

    window.onload = function () {
        console.log("window.onload called");

        const now = new Date();
        const firstDayOfYear = new Date(now.getFullYear(), 0, 1).toISOString().slice(0, 10); // "YYYY-MM-DD" format;
        const todayDate = new Date().toISOString().slice(0, 10);

        console.log("First Day Of Year " +  firstDayOfYear);
        console.log("Todays Date " +  todayDate);

        const yearHeader = document.getElementById('yearHeader');
        console.log("yearHeader is " + yearHeader);

        if (yearHeader) 
        {
            const row = document.createElement('tr');
            row.innerHTML = `<td>Summary for ${firstDayOfYear} to ${todayDate}</td>`;
            yearHeader.appendChild(row);
        }

        const queryStr = `/HomeBudget/TransactionDollarsByCategory?fromDate=${firstDayOfYear}&toDate=${todayDate}`;

        console.log("queryStr is " + queryStr);

        fetch(queryStr)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log("data is " + JSON.stringify(data));
                // Process the data as needed
                // For example, you can call a function to update the UI with the fetched data                
                renderSummaryByCategory(data);
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });


           const queryStrImportHistory = `/HomeBudget/ImportTransactionHistory`;

              console.log("queryStr is " + queryStrImportHistory);

              fetch(queryStrImportHistory)
               .then(response => {
                   if (!response.ok) {
                       throw new Error('Network response was not ok');
                   }
                   return response.json();
               })
               .then(importTransactionHistory => {
                      //console.log("importTransactionHistory is ",  JSON.stringify(importTransactionHistory));
                   // Process the data as needed
                   // For example, you can call a function to update the UI with the fetched data
                   renderImportTransactionHistory(importTransactionHistory);
               })
               .catch(error => {
                   console.error('There was a problem with the fetch operation:', error);
               });

    };

    function renderSummaryByCategory(transactionList) {
      console.log('renderSummaryByCategory Start Date:', transactionList.StartDate);
      console.log('renderSummaryByCategory End Date:', transactionList.EndDate);
      console.log('renderSummaryByCategory Cost Transactions:', transactionList.listOfCostTransactionDollarsByCategory);
      console.log('renderSummaryByCategory Savings Transactions:', transactionList.listOfSavingsTransactionDollarsByCategory);


      var costTotal = transactionList.costTotal;
      var savingsTotal = transactionList.savingsTotal;

      console.log("costTotal is " + costTotal);
      console.log("savingsTotal is " + savingsTotal);

      var cashBurn = costTotal - savingsTotal;

      console.log("cashBurn is " + cashBurn);

      var costList = transactionList.listOfCostTransactionDollarsByCategory;
      var savingsList = transactionList.listOfSavingsTransactionDollarsByCategory;

      const tbody = document.getElementById('costSummaryByCategory');

      if (tbody)
      {
          tbody.innerHTML = ''; // Clear any old rows

           costList.forEach(cost => {
                const row = document.createElement('tr');
                row.innerHTML = `<td>${cost.categoryName}</td><td>&nbsp;&nbsp;</td><td>${cost.totalAmount}</td><td>&nbsp;&nbsp;</td>`
                tbody.appendChild(row);
           });
      }

      const tbodySavings = document.getElementById('savingsSummaryByCategory');

      if (tbodySavings)
      {
        tbodySavings.innerHTML = ''; // Clear any old rows

        savingsList.forEach(savings => {
            const row = document.createElement('tr');
            row.innerHTML = `<td>${savings.categoryName}</td><td>&nbsp;&nbsp;</td><td>${savings.totalAmount}</td><td>&nbsp;&nbsp;</td>`
            tbodySavings.appendChild(row);
        });
      }

      const tbodyYearRevenue = document.getElementById('yearRevenue');
      const tbodyYearCost = document.getElementById('yearCost');

      if (tbodyYearRevenue)
      {
          tbodyYearRevenue.innerHTML = ''; // Clear any old rows
          const row = document.createElement('tr');
          row.innerHTML = `<td>Revenue</td><td>${savingsTotal}</td>`;
          tbodyYearRevenue.appendChild(row);    
      }

      if (tbodyYearCost)
      {   
          tbodyYearCost.innerHTML = ''; // Clear any old rows
          const row = document.createElement('tr');
          row.innerHTML = `<td>Cost</td><td>${costTotal}</td>`;
          tbodyYearCost.appendChild(row);
      }
 }
</script>

<body style="background-color: beige;">
    <table>
        <tbody id="yearHeader">
        </tbody>

        <tbody id="yearRevenue">
        </tbody>

        <tbody id="yearCost">
        </tbody>
    </table>

    <div class="container">
        <div class="item">
            <table>
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>&nbsp;&nbsp;</th>
                        <th>Cost</th>
                    </tr>
                </thead>
                <tbody id="costSummaryByCategory">
                </tbody>
            </table>
        </div>
        <div class="item">
                <table>
                    <thead>
                        <tr>
                            <th>Category</th>
                            <th>&nbsp;&nbsp;</th>
                            <th>Revenue</th>
                        </tr>
                    </thead>
                    <tbody id="savingsSummaryByCategory">
                    </tbody>
                </table>
        </div>
    </div>
</body>

